version: '3.1'

volumes:
  redis:
  pgdata:
  letsencrypt:
  assets:
  logs:

services:
  db:
    image: postgres
    ports:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DATABASE_NAME: PracticalDeveloper_production
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  in_memory_store:
    image: redis:5-alpine
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]

  server_app: &server_app
    build:
      context: .
      args:
        - REDIS_URL=redis://in_memory_store
        - RAILS_ENV=local_production
        - ALGOLIASEARCH_API_KEY=83db4ac15af764b3dc5dea76e8920336
        - ALGOLIASEARCH_APPLICATION_ID=0RRG35HS6F
        - ALGOLIASEARCH_SEARCH_ONLY_KEY=68164daa659ce5b8b5e08412bf760dd9
    command: bundle exec rails server -b 0.0.0.0 -p 5000
    entrypoint: "./docker-entrypoint.sh"
    volumes:
      - assets:/usr/src/app/public/assets
      - logs:/usr/src/app/log
    tty: true
    stdin_open: true
    restart: on-failure
    environment:
      RAILS_ENV: local_production
      REDIS_URL: "redis://in_memory_store:6379"
      DATABASE_URL: db
      APP_DOMAIN: thinknetica.railsdev.site
      APP_PROTOCOL: http://
      DB_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: PracticalDeveloper_production
    env_file: ./deploy/environments/variables.production.env
    depends_on:
      - db
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]

  jobs:
    <<: *server_app
    ports: []
    entrypoint: []
    command: rails jobs:work

  web_server:
    build:
      context: ./deploy/configs/nginx
      args:
        - CONFIG_FILE=default-no-key.conf
    volumes:
      - assets:/ubicar/public/assets
      - letsencrypt:/etc/letsencrypt
    environment:
      CUSTOM_APP_VHOST: thinknetica.railsdev.site
      CUSTOM_APP_PORT: 5000
      STATIC_PATH: /usr/src/app/public
      CERTBOT_EMAIL: tbilous@gmail.com
      IS_STAGING: 1
    ports:
      - 80:8080
      - 443:443
    depends_on:
      - server_app
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]

  grafana:
    image: grafana/grafana:5.2.4
    depends_on:
      - prometheus
    ports:
      - 3000:3000/tcp
    volumes:
      - ./grafana_db:/var/lib/grafana
    user: "1000"

  prometheus:
    image: prom/prometheus:v2.4.3
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090/tcp
    depends_on:
      - server_app
    command:
      - --config.file=/etc/prometheus/prometheus.yml
