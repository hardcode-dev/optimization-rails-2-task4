version: "3"
services:
  prometheus:
    image: prom/prometheus:0.18.0
#    depends_on:
#      - web
    volumes:
      - ./prometheus_data:/etc/prometheus/
    #      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9394:9090'
  grafana:
    image: grafana/grafana:3.0.0-beta7
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
    depends_on:
      - prometheus
    ports:
      - "3030:3000"
  web: &rails_base
    build:
      dockerfile: Dockerfile
      context: .
    tty: true
    stdin_open: true
    ports:
      - "3000:3000"
    depends_on:
      - db
      - prometheus
      - influxdb
    environment:
      RAILS_ENV: local_production
#      RAILS_ENV: development
      PROMETHEUS_EXPORTER_HOST: prometheus
      PROMETHEUS_EXPORTER_BIND: localhost
      PROMETHEUS_EXPORTER_PORT: 9090
      SEND_LOGS_TO_TIMBER: "false"
      DATABASE_URL: postgres://rails:password@db:5432/postgres
      YARN_INTEGRITY_ENABLED: "false"
#      POSTGRES_USER: rails
#      POSTGRES_PASSWORD: password
    volumes:
      - .:/usr/src/app
    command: /bin/bash
#    command: bundle exec rails server -b 0.0.0.0 -p 3000
  jobs:
    ports: []
    <<: *rails_base
#    command: rails jobs:work
  webpacker:
    tty: true
    stdin_open: true
    ports: []
    <<: *rails_base
    command: ./bin/webpack-dev-server
  db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: rails
      POSTGRES_PASSWORD: password

  telegraf:
    image: telegraf:1.4.0
    volumes:
      - ./tools/tick-docker/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    links:
      - influxdb
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"
  # Define an InfluxDB service
  influxdb:
    image: influxdb:1.3.5
    volumes:
      - ./tools/tick-docker/data/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"
  # Define a Chronograf service
  chronograf:
    image: chronograf:1.3.8
    environment:
      INFLUXDB_URL: http://influxdb:8086
      KAPACITOR_URL: http://kapacitor:9092
    ports:
      - "8888:8888"
    links:
      - influxdb
      - kapacitor
  # Define a Kapacitor service
  kapacitor:
    image: kapacitor:1.3.3
    environment:
      KAPACITOR_HOSTNAME: kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
    links:
      - influxdb
    ports:
      - "9092:9092"
  # Define a service for using the influx CLI tool.
  # docker-compose run influxdb-cli
  influxdb-cli:
    image: influxdb:1.3.5
    entrypoint:
      - influx
      - -host
      - influxdb
    links:
      - influxdb
  # Define a service for using the kapacitor CLI tool.
  # docker-compose run kapacitor-cli
  kapacitor-cli:
    image: kapacitor:1.3.3
    entrypoint: bash
    environment:
      KAPACITOR_URL: http://kapacitor:9092
    links:
      - kapacitor
