server {
  listen 8080 default_server;
  listen [::]:8080 default_server;
  server_name APP_VHOST;

  include /etc/nginx/snippets/letsencrypt.conf;

  location / {
    return 301 https://APP_VHOST$request_uri;
  }
}

server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server ipv6only=on;

  server_name APP_VHOST;

  access_log /var/log/nginx.access.log;
  error_log /var/log/nginx.error.log info;

  error_page 405 /405.html;
  error_page 503 /503.html;

  client_max_body_size 64M;
  keepalive_timeout 10;

  root STATIC_PATH;

  try_files $uri/index.html $uri @app;

  location ~ ^/assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
    root STATIC_PATH;
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_disable "MSIE [1-6]\.";
    gzip_comp_level 6;
    gzip_types application/javascript application/x-javascript text/javascript text/css text/xml image/x-icon image/png image/jpeg$;
  }

  location @app {
    proxy_pass http://app;
      proxy_set_header  Host $host;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-Ssl on; # Optional
    proxy_set_header  X-Forwarded-Port $server_port;
    proxy_set_header  X-Forwarded-Host $host;
  }

  # Websockets configuration
  location /cable {
    proxy_pass http://app/cable;
      proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $host:$server_port;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
  }

  ssl_certificate     /etc/letsencrypt/live/APP_VHOST/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/APP_VHOST/privkey.pem;
}
